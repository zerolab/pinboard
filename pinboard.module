<?php
/**
 * @file
 *    pinboard.module - a simple bookmarking utility and UI
 */

/**
 *  Load the common includes
 */
function pinboard_load_common_includes() {
  static $pinboard_module_path;
  if (!$pinboard_module_path) {
    $pinboard_module_path = drupal_get_path('module', 'pinboard');
    require_once($pinboard_module_path .'/pinboard.common.inc');
  }
}

pinboard_load_common_includes();

/**
 *  Implementation of hook_perm()
 */
function pinboard_perm() {
  return array(
    'view public bookmarks', // public bookmarks
    'create bookmarks',
    'delete own bookmarks',
    'delete any bookmarks'
  );
}


/**
 *  Implementation of hook_menu()
 */
function pinboard_menu() {
  $items = array();

  $items['bookmark/add'] = array(
    'title' => 'Add bookmark',
    'page callback' => 'pinboard_bookmarklet_page',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'pinboard.pages.inc'
  );

  // callbacks
  $items['bookmark/%/%'] = array(
    'title' => 'Bookmark action',
    'page callback' => 'pinboard_actions_page',
    'page arguments' => array(1, 2),
    'access callback' => 'pinboard_access',
    'access arguments' => array('create bookmarks', 'delete own bookmarks'),
    'file' => 'pinboard.pages.inc',
    'type' => MENU_CALLBACK
  );

  $items['bookmark/%/delete'] = array(
    'title' => 'Delete bookmark',
    'page callback' => 'pinboard_delete',
    'page arguments' => array(1),
    'access arguments' => array('delete own bookmarks'),
    'type' => MENU_CALLBACK
  );

  // User-specific data
  $items['user/%user/bookmarks'] = array(
    'title' => t('Bookmarks'),
    'page callback' => 'pinboard_user_page',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'file' => 'pinboard.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 5
  );

  return $items;
}

/**
 * Implememtation of hook_access
 * Check for multiple permissions
 */
function pinboard_access() {
  foreach(func_get_args() as $perm) {
    if (!user_access($perm)) {
      return FALSE;
    }
  }

  return TRUE;
}

/**
 * Checks for bookmarks page access
 *
 * @param $account
 *    The user account object
 *
 * @return Boolean
 *
 * @see user_view_access()
 */
function pinboard_bookmarks_access($account) {
  $data = unserialize($account->data);
  $public = ($data['pinboard_visibility'] == 'public');

  return $account && $account->uid &&
    (
      // Always let users view their own bookmarks.
      ($GLOBALS['user']->uid == $account->uid) ||
      // Administrators can view all bookmarks.
      user_access('administer users') ||
      // The viewed user is not blocked and logged in at least once.
      // The bookmarks page is public and the viewing user has permission
      ($account->access && $account->status && $public &&
        user_access('view public bookmarks', $GLOBALS['user']) )
    );
}

/**
 * Implementation of hook_user()
 * Inject a private/public bookmarks page option
 */
function pinboard_user($op, &$edit, &$account, $category = NULL) {
  if ($op == 'form' && $category == 'account') {
    $data = unserialize($account->data);
    $form['pinboard_visibility'] = array(
      '#type' => 'radios',
      '#title' => t('Bookmarks visibility'),
      '#options' => array(
        'private' => t('Private'),
        'public'  =>t('Public')
      ),
      '#default_value' => isset($data['pinboard_visibility']) ? $data['pinboard_visibility'] : 'private'
    );

    return $form;
  }
}

/**
 * Implementation of hook_preprocess_page()
 *
 * Add our template suggestions for the bookmarklet page
 */
function pinboard_preprocess_page(&$vars) {
  if ($_GET['q'] == 'bookmark/add' && !arg(2)) {
    $vars['template_files'][] = 'page-pinboard-bookmarklet';
    $vars['pinboard_css'] = url(drupal_get_path('module', 'pinboard') .'/theme/pinboard.bookmarklet.css', array('absolute' => TRUE));
  }
}
/**
 * Implementation of hook_theme_registry_alter()
 * Move pinboard theme path to the top of suggestions
 */
function pinboard_theme_registry_alter(&$registry) {
  $path = drupal_get_path('module', 'pinboard') .'/theme';
  array_unshift($registry['page']['theme paths'], $path);
}

/**
 * Implementation of hook_init()
 * Adds the pinboard JavaScript and CSS
 */
function pinboard_init() {
  drupal_add_js(drupal_get_path('module', 'pinboard'). '/theme/pinboard.js');
  drupal_add_css(drupal_get_path('module', 'pinboard'). '/theme/pinboard.css');
}