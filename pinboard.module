<?php
/**
 * @file
 *    pinboard.module - a simple bookmarking utility and UI
 */

/**
 *  Implementation of hook_perm()
 */
function pinboard_perm() {
  return array(
    'access bookmarks', // public bookmarks
    'view own private bookmarks',
    'create bookmarks',
    'delete own bookmarks',
    'delete any bookmarks'
  );
}


/**
 *  Implementation of hook_menu()
 */
function pinboard_menu() {
  $items = array();

  $items['bookmark/add'] = array(
    'title' => 'Add bookmark',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pinboard_form'),
    'access callback' => 'user_access',
    'access arguments' => array('create bookmarks')
  );

  $items['bookmark/%/delete'] = array(
    'title' => 'Delete bookmark',
    'page callback' => 'pinboard_delete',
    'page arguments' => array(1),
    'access arguments' => array('delete own bookmarks', 'delete all bookmarks'),
    'type' => MENU_CALLBACK
  );

  // User-specific data
  $items['user/%user/bookmarks'] = array(
    'title' => t('Bookmarks'),
    'page callback' => 'pinboard_user_page',
    'page arguments' => array(1),
    'access callback' => 'user_access',
    'access arguments' => array('access bookmarks'),
    'file' => 'pinboard.pages.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 5
  );

  return $items;
}

/**
 * Implementation of hook_form()
 * This is the bookmark creation form
 */
function pinboard_form() {
  $form['url'] = array(
    '#type' => 'textfield',
    '#title' => 'URL',
    '#required' => TRUE
  );

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => 'Title',
  );

  $form['description'] = array(
    '#type' => 'textarea',
    '#title' => 'Short description',
    '#description' => 'Enter a short description or summary for the bookmarked URL. Up to 250 characters.'
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Bookmark')
  );

  return $form;
}

/**
 *  Implementation of hook_validate()
 *
 *  @todo use idn_to_ascii() for PHP 5.3
 */
function pinboard_form_validate($form, &$form_state) {
  $url = $form_state['values']['url'];

  if (function_exists('idn_to_ascii')) {
    $url = idn_to_ascii($url);
  }
  if (!valid_url($url, TRUE) ) {
    form_set_error('url', 'Please enter a valid URL');
  }
}

/**
 *  Handles the bookmark creation
 *
 * @todo get title/description via drupal_http_request to $url if empty
 */
function pinboard_form_submit($form, &$form_state) {
  global $user;

  $url    = check_url($form_state['values']['url']);
  $title  = check_plain($form_state['values']['title']);
  $description = check_plain($form_state['values']['description']);

  if ($bid = db_result(db_query("SELECT bid FROM {pinboard} WHERE url='%s' AND uid = %d", $url, $user->uid)) ) {
    // Update the title/description since it already exists
    db_query("UPDATE {pinboard} SET title='%s', description = '%s' WHERE bid = %d", $title, $description, $bid);
    $message = 'Bookmark updated';
  }
  else {
    // add new bookmark
    db_query("INSERT INTO {pinboard} (uid, url, title, description, created) "
    ."VALUES (%d, '%s', '%s', '%s', %d)", $user->uid, $url, $title, $description, time());

    $message = 'Bookmark successfully added';
  }

  drupal_set_message($message);
}